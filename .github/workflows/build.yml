name: Build

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            cc: gcc
          - arch: i686
            cc: i686-linux-gnu-gcc
          - arch: x86_64
            cc: gcc
            sanitize: 1
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            gcc-i686-linux-gnu g++-i686-linux-gnu \
            clang clang-tidy clang-format

      - name: Install pre-commit
        run: |
          python3 -m pip install --upgrade pre-commit
          pre-commit --version

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Build with Makefile
        run: |
          make -f Makefile.new ARCH=${{ matrix.arch }} CC=${{ matrix.cc }} SANITIZE=${{ matrix.sanitize || 0 }}

      - name: Build with CMake
        run: |
          CC=${{ matrix.cc }} cmake -B build -DARCH=${{ matrix.arch }} -DSANITIZE=${{ matrix.sanitize || 0 }}
          cmake --build build

      - name: Build tests
        run: |
          : "${LITES_SRC_DIR?Set LITES_SRC_DIR to the legacy source tree}"
          if [ -d "$LITES_SRC_DIR/bin/user_pager" ]; then
            make -C "$LITES_SRC_DIR/bin/user_pager" CC=${{ matrix.cc }}
          fi
          make -C tests/audit CC=${{ matrix.cc }}
          make -C tests/cap CC=${{ matrix.cc }}
          make -C tests/iommu CC=${{ matrix.cc }}
          make -C tests/vm_fault CC=${{ matrix.cc }}
          make -C tests/pipe CC=${{ matrix.cc }}
          make -C tests/spawn_wait CC=${{ matrix.cc }}

      - name: Run tests
        run: |
          ./tests/audit/test_audit
          ./tests/cap/test_cap
          ./tests/iommu/test_iommu
          ./tests/vm_fault/test_vm_fault
          ./tests/pipe/test_pipe
          ./tests/spawn_wait/test_spawn_wait

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lites-${{ matrix.arch }}${{ matrix.sanitize && '-asan' || '' }}
          path: |
            lites_server
            lites_emulator
            build/lites_server
            build/lites_emulator
          if-no-files-found: ignore
