# Prefer the modernised source tree if present
ifeq ($(wildcard src-lites-1.1-2025),src-lites-1.1-2025)
SRCDIR ?= src-lites-1.1-2025
else
SRCDIR ?= build/lites-1.1.u3
endif
CC ?= gcc

# Optional Mach kernel source tree for headers
MACHDIR ?= $(LITES_MACH_DIR)
ifeq ($(MACHDIR),)
ifneq ($(wildcard openmach/include),)
MACHDIR := openmach
endif
endif
ifneq ($(MACHDIR),)
MACH_INCDIR := -I$(MACHDIR)/include
endif

# Target architecture (x86_64 or i686). Determines -m32/-m64 flags.
ARCH ?= x86_64

# Base optimisation flags
C23_FLAG := $(shell $(CC) -std=c23 -E -x c /dev/null >/dev/null 2>&1 && echo -std=c23 || echo -std=c2x)
CFLAGS ?= -O2 $(C23_FLAG)


# Translate ARCH into compiler options and cross-compilers
ifeq ($(ARCH),i686)
CFLAGS += -m32
LDFLAGS += -m32
ARCH_INCDIR := -I$(SRCDIR)/include/i386
else ifeq ($(ARCH),x86_64)
CFLAGS += -m64
LDFLAGS += -m64
ARCH_INCDIR := -I$(SRCDIR)/include/x86_64
endif

# Map ARCH to the corresponding directory name
ARCH_DIR := $(ARCH)
ifeq ($(ARCH),i686)
ARCH_DIR := i386
endif

# Directories under server that are architecture independent
SERVER_COMMON_DIRS := $(shell find $(SRCDIR)/server -mindepth 1 -maxdepth 1 -type d \
    | grep -Ev '/(i386|x86_64|mips|ns532|parisc)$' | tr '\n' ' ')

# Source files and include directories for the selected architecture
SERVER_DIRS := $(SRCDIR)/server/$(ARCH_DIR) $(SERVER_COMMON_DIRS)
SERVER_SRC := $(foreach d,$(SERVER_DIRS),$(shell find $(d) -name \*.c -o -name \*.s))
SERVER_INCDIRS := $(foreach d,$(SERVER_DIRS),$(shell find $(d) -type d | sed 's/^/-I/'))

ifneq ($(wildcard $(SRCDIR)/emulator),)
EMULATOR_SRC := $(shell find $(SRCDIR)/emulator -name '*.c' -o -name '*.s')
EMULATOR_INCDIRS := $(shell find $(SRCDIR)/emulator -type d | sed 's/^/-I/')
endif

TARGETS := lites_server
ifneq ($(EMULATOR_SRC),)
TARGETS += lites_emulator
endif

all: prepare $(TARGETS)

prepare:
	@if [ ! -e $(SRCDIR)/include/machine ]; then \
	arch_dir=$(ARCH); \
	[ "$$arch_dir" = "i686" ] && arch_dir=i386; \
	ln -s $$arch_dir $(SRCDIR)/include/machine; \
fi

lites_server: $(SERVER_SRC)
	$(CC) $(CFLAGS) -I$(SRCDIR)/include $(ARCH_INCDIR) $(MACH_INCDIR) $(SERVER_INCDIRS) $^ $(LDFLAGS) -o $@

ifneq ($(EMULATOR_SRC),)
lites_emulator: $(EMULATOR_SRC)
	$(CC) $(CFLAGS) -I$(SRCDIR)/include $(ARCH_INCDIR) $(MACH_INCDIR) $(EMULATOR_INCDIRS) $^ $(LDFLAGS) -o $@
endif
	
clean:
	rm -f lites_server lites_emulator

